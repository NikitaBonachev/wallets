"use strict";var walletsApp=angular.module("walletsApp",["ui.router","userList","userTransactions","userDetail","templates"]);walletsApp.config(["$stateProvider","$locationProvider","$urlRouterProvider",function(e,t,r){e.state("user-list",{url:"/users",templateUrl:"controllers/user-list/UserListTemplate.html",controllerAs:"$ctrlUserList",controller:"UserListCtrl"}),e.state("user-detail",{url:"/user?id",templateUrl:"controllers/user-detail/UserDetailTemplate.html",controllerAs:"$ctrlDetail",controller:"UserDetailCtrl"}),e.state("user-transactions",{url:"/user/transactions?id",templateUrl:"controllers/user-transactions/UserTransactionsTemplate.html",controllerAs:"$ctrlUserTransactions",controller:"UserTransactionsCtrl"}),r.otherwise(function(e){e.get("$state").go("user-list")})}]),walletsApp.run(["$rootScope","$location",function(e,t){e.$on("$locationChangeSuccess",function(){e.currentUrl=t.url()})}]),angular.module("walletsAppConfig",[]).constant("appConfig",{baseUrl:"https://livedemo.xsolla.com/fe/test-task/baev",transDateTimeFormat:"YYYY-MM-DD HH:mm"}),angular.module("core-api",["walletsAppConfig"]),angular.module("core-api").factory("api",["$injector",function(e){var t=e.get("appConfig").baseUrl;return function(e){function r(e,t,r){return t&&r?e.then(function(e){t(e)},function(e){e(e)}):r?e.then(function(e){e(e)}):t?e.then(function(e){t(e)}):e}function a(a){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,i="";if(n){i="?";for(var u in n)n.hasOwnProperty(u)&&(i+=u+"="+n[u]+"&");i=i.slice(0,-1)}return r(e.get(t+a+i),o,s)}function n(a,n,o,s){return n||(n={}),r(e.put(t+a,n),o,s)}function o(a,n,o,s){return r(e.post(t+a,n),o,s)}return{update:n,create:o,get:a}}}]),angular.module("newRecharge",["ui.router","core.user"]),angular.module("newRecharge").component("newRecharge",{templateUrl:"controllers/new-recharge/NewRechargeTemplate.html",controllerAs:"$ctrlNewRecharge",controller:["NewRecharge","$rootScope","$stateParams",function(e,t,r){var a=this;a.userId=r.id,a.newRecharge={amount:"",comment:""},a.submitRecharge=function(){if(a.errors=[],!a.newRecharge.comment)return void a.errors.push({message:"Comment should not be blank"});a.errors.length>0||(a.isLoading=!0,e(a.userId,a.newRecharge,function(e){a.isLoading=!1,e.data&&(e.data.amount?(t.$broadcast("newRecharge",{}),a.newRecharge={amount:"",comment:""}):a.errors.push({message:e.data.message}))},function(e){a.errors.push({message:e.message}),a.isLoading=!1}))}}]}),angular.module("transactionList",["ui.router","core.user"]),angular.module("transactionList").component("transactionList",{templateUrl:"controllers/transaction-list/TransactionListTemplate.html",controllerAs:"$ctrlTransList",controller:["UserTransactions","$stateParams","$injector",function(e,t,r){function a(){var t=o.params.datetime_to.format(),r=o.params.datetime_from.format(),a=o.params.trans_type,s={datetime_from:r,datetime_to:t};a&&(s.transaction_type=a),o.isLoading=!0,e(o.userId,s,function(e){o.isLoading=!1;var t=e.data;t.length?o.transactions=t.map(function(e){return e.dateFormated=moment(e.date).utc(!1).format(n),e}):o.transactions=[]},function(){o.isLoading=!1})}var n=r.get("appConfig").transDateTimeFormat,o=this;o.userId=t.id,o.params={datetime_from:moment().subtract(7,"days").startOf("day").utc(!1),datetime_to:moment().endOf("day").utc(!1),trans_type:null},o.types=[{name:"No selection"},{value:"payment",name:"Payment"},{value:"coupon",name:"Coupon"},{value:"inGamePurchase",name:"In game purchase"},{value:"internal",name:"Internal"},{value:"cancellation",name:"Cancellation"}],a(),angular.element(document).ready(function(){var e=$("#rangeStart"),t=$("#rangeEnd");e.calendar({type:"date",monthFirst:!1,firstDayOfWeek:1,endCalendar:t,onChange:function(e){o.params.datetime_from=moment(e).startOf("day").utc(!1)}}),t.calendar({type:"date",monthFirst:!1,firstDayOfWeek:1,startCalendar:e,onChange:function(e){o.params.datetime_to=moment(e).endOf("day").utc(!1)}}),$(".dropdown").dropdown()}),o.reloadTrans=function(){a()}}]}),angular.module("userDetail",["ui.router","userEdit","userInfo","newRecharge"]).controller("UserDetailCtrl",["$stateParams",function(e){var t=this;e.id&&(t.id=e.id)}]),angular.module("userEdit",["ui.router","core.user"]);var emailRegexp=new RegExp(["^","(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*",'|"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]','|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*")',"@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?","|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}","(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:","(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]","|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)","\\])","$"].join(""));angular.module("userEdit").component("userEdit",{templateUrl:"controllers/user-edit/UserEditTemplate.html",controllerAs:"$ctrlEdit",controller:["CreateUser","UpdateUser","OneUser","$stateParams","$state",function(e,t,r,a,n){var o=this;o.user={user_id:"",user_name:"",user_custom:"",email:""},a.id&&(o.userId=a.id,o.isLoading=!0,r(o.userId,function(e){o.user=e.data,o.isLoading=!1},function(){o.isLoading=!1})),o.submitUser=function(r){o.errors=[],r.email.length>0&&(emailRegexp.test(r.email)||o.errors.push({message:"Invalid email"})),r.user_id||o.errors.push({message:"ID is required!"}),o.errors.length>0||(o.isLoading=!0,o.userId?t(o.userId,r,function(e){o.isLoading=!1,e.data&&204!=e.data.http_status_code&&o.errors.push({message:e.data.message})},function(e){o.errors.push({message:e.message}),o.isLoading=!1}):e(r,function(e){o.isLoading=!1,e.data?204!=e.data.http_status_code&&o.errors.push({message:e.data.message}):n.go("user-detail",{id:r.user_id})},function(e){o.errors.push({message:e.message}),o.isLoading=!1}))}}]}),angular.module("userInfo",["ui.router","core.user"]),angular.module("userInfo").component("userInfo",{templateUrl:"controllers/user-info/UserInfoTemplate.html",controllerAs:"$ctrlInfo",controller:["OneUser","$rootScope","$stateParams",function(e,t,r){function a(){n.isLoading=!0,e(n.userId,function(e){n.user=e.data,n.isLoading=!1},function(){n.isLoading=!1})}var n=this;n.user={},n.userId=r.id,a(),t.$on("newRecharge",function(){a()})}]}),angular.module("userList",["core.user"]).controller("UserListCtrl",["Users","$location","$injector",function(e,t,r){function a(e,t){for(var r=e,a=t,n=r-2,o=r+2+1,s=[],i=[],u=void 0,l=1;l<=a;l++)(1==l||l==a||l>=n&&l<o)&&s.push(l);var c=!0,d=!1,m=void 0;try{for(var g,f=s[Symbol.iterator]();!(c=(g=f.next()).done);c=!0){var p=g.value;u&&(p-u==2?i.push(u+1):p-u!=1&&i.push("...")),i.push(p),u=p}}catch(e){d=!0,m=e}finally{try{!c&&f.return&&f.return()}finally{if(d)throw m}}return i}function n(){o.isLoading=!0,e(o.pageParams,function(e){var t=o.pageParams.limit,r=o.pageParams.offset;o.users=e.data.data,o.isLoading=!1;var n=Math.ceil(e.data.recordsTotal/t),s=r/t+1;o.currentPage=s,o.pages=a(s,n)},function(){o.isLoading=!1})}var o=this;o.perPageChoices=[5,10,15],o.pages=[],o.pageParams={limit:o.perPageChoices[0],offset:0},n(),o.selectPerPage=function(e){o.pageParams.offset=0,o.pageParams.limit=e,n()},o.setPage=function(e){Number.isInteger(e)&&(o.pageParams.offset=e*o.pageParams.limit,n())},o.openUser=function(e){r.get("$state").go("user-detail",{id:e})}}]),angular.module("userTransactions",["ui.router","transactionList"]).controller("UserTransactionsCtrl",["$stateParams",function(e){this.id=e.id}]),angular.module("core.user",["core-api"]),angular.module("core.user").factory("Users",["api","$http",function(e,t){return function(r){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return e(t).get("/users",r,a,n)}}]).factory("OneUser",["api","$http",function(e,t){return function(r){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return e(t).get("/users/"+r,null,a,n)}}]).factory("UpdateUser",["api","$http",function(e,t){return function(r,a){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;return e(t).update("/users/"+r,a,n,o)}}]).factory("CreateUser",["api","$http",function(e,t){return function(r){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return e(t).create("/users",r,a,n)}}]).factory("NewRecharge",["api","$http",function(e,t){return function(r,a){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;return e(t).create("/users/"+r+"/recharge",a,n,o)}}]).factory("UserTransactions",["api","$http",function(e,t){return function(r,a){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;return e(t).get("/users/"+r+"/transactions",a,n,o)}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
